# Lerian MCP Memory Server - Configuration
# Copy this file to .env and update the values as needed
#
# GLOBAL ENVIRONMENT VARIABLES:
# This configuration automatically uses global environment variables if they're 
# already set on your system (e.g., OPENAI_API_KEY, CLAUDE_API_KEY, ANTHROPIC_API_KEY).
# If global variables are found, you may not need to edit this file at all!
#
# To check if you have global API keys set, run:
#   echo $OPENAI_API_KEY
#   echo $CLAUDE_API_KEY  
#   echo $ANTHROPIC_API_KEY

# ================================================================
# REQUIRED - API KEYS
# ================================================================

# OpenAI Configuration (Required for embeddings and AI features)
# Uses global OPENAI_API_KEY environment variable if already set in your system
OPENAI_API_KEY=${OPENAI_API_KEY:-your_openai_api_key_here}

# Alternative AI Providers (configure at least one for fallback)
# Claude: Uses CLAUDE_API_KEY or ANTHROPIC_API_KEY global environment variables  
CLAUDE_API_KEY=${CLAUDE_API_KEY:-${ANTHROPIC_API_KEY:-your_claude_api_key_here}}

# Perplexity: Uses PERPLEXITY_API_KEY global environment variable
PERPLEXITY_API_KEY=${PERPLEXITY_API_KEY:-your_perplexity_api_key_here}

# ================================================================
# AI PROVIDER CONFIGURATION
# ================================================================

# Primary AI Provider (auto-detects if not specified)
AI_PROVIDER=openai                         # Options: openai, claude, perplexity, mock

# OpenAI Settings
OPENAI_MODEL=gpt-4o
OPENAI_EMBEDDING_MODEL=text-embedding-ada-002
OPENAI_BASE_URL=https://api.openai.com/v1

# Claude/Anthropic Settings
CLAUDE_MODEL=claude-sonnet-4
CLAUDE_BASE_URL=https://api.anthropic.com

# Perplexity Settings
PERPLEXITY_MODEL=sonar-pro
PERPLEXITY_BASE_URL=https://api.perplexity.ai

# ================================================================
# SERVER CONFIGURATION
# ================================================================

# Server Settings
MCP_MEMORY_HOST=localhost
MCP_MEMORY_PORT=9080

# Logging Configuration
MCP_MEMORY_LOG_LEVEL=warn                  # Options: debug, info, warn, error
MCP_MEMORY_LOG_FORMAT=json                 # Options: json, text
MCP_MEMORY_LOG_FILE=/app/logs/mcp-memory.log

# ================================================================
# DATABASE CONFIGURATION
# ================================================================

# PostgreSQL Database (Primary metadata storage)
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/lerian_mcp_memory?sslmode=disable

# Alternative individual settings (if DATABASE_URL not used)
DB_HOST=localhost
DB_PORT=5432
DB_NAME=lerian_mcp_memory
DB_USER=postgres
DB_PASSWORD=postgres

# ================================================================
# VECTOR DATABASE (QDRANT)
# ================================================================

# Qdrant Configuration (for embeddings and semantic search)
MCP_MEMORY_QDRANT_HOST=localhost
MCP_MEMORY_QDRANT_PORT=6334
MCP_MEMORY_QDRANT_COLLECTION=claude_memory

# ================================================================
# CONTENT PROCESSING
# ================================================================

# Smart Chunking Configuration
MCP_MEMORY_CHUNKING_STRATEGY=semantic
MCP_MEMORY_CHUNKING_MAX_LENGTH=8000
MCP_MEMORY_CHUNKING_MIN_LENGTH=100

# ================================================================
# RELIABILITY & PERFORMANCE
# ================================================================

# Circuit Breaker (prevents cascade failures)
MCP_MEMORY_CIRCUIT_BREAKER_ENABLED=true

# Backup Configuration
MCP_MEMORY_BACKUP_ENABLED=true
MCP_MEMORY_BACKUP_INTERVAL_HOURS=24
MCP_MEMORY_BACKUP_DIRECTORY=/app/backups

# ================================================================
# DOCKER COMPOSE OVERRIDES
# ================================================================
# These are used by docker-compose.yml for container orchestration

# Port Mappings (host:container)
MCP_HOST_PORT=9080                         # MCP server
MCP_HEALTH_PORT=9081                       # Health checks
QDRANT_HOST_PORT=6333                      # Qdrant UI
QDRANT_GRPC_PORT=6334                      # Qdrant gRPC

# Container Health Checks
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=3

# ================================================================
# CLI CONFIGURATION (LMMC)
# ================================================================

# Server connection for CLI (optional - CLI works in offline mode)
LMMC_SERVER_URL=http://localhost:9080
LMMC_SERVER_TIMEOUT=30

# CLI behavior
LMMC_OUTPUT_FORMAT=table
LMMC_COLOR_SCHEME=auto
LMMC_PAGE_SIZE=20
LMMC_EDITOR=

# CLI logging
LMMC_LOG_LEVEL=warn
LMMC_LOG_FORMAT=text

# ================================================================
# DEVELOPMENT OVERRIDES (uncomment for local development)
# ================================================================

# MCP_MEMORY_LOG_LEVEL=debug
# MCP_MEMORY_BACKUP_ENABLED=false

# ================================================================
# PRODUCTION OVERRIDES (uncomment for production deployment)
# ================================================================

# MCP_MEMORY_LOG_LEVEL=warn
# MCP_MEMORY_BACKUP_ENABLED=true
# MCP_MEMORY_ENCRYPTION_ENABLED=true

# ================================================================
# TESTING CONFIGURATION
# ================================================================

# Test Database
TEST_DATABASE_URL=postgresql://test:test@localhost:5433/test_db

# Test Execution Flags
RUN_E2E_TESTS=false
RUN_INTEGRATION_TESTS=false
RUN_PERF_TESTS=false